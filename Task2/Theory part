Oppgave 2
    Når vi initierer en peker kan det lønne seg å skrive det på en av
    de to måtene under:
    "char *linje = nullptr; // eller char *linje = 0;"
    Dette vil si at pekeren skal peke på plassen 0 i minnet som ikke 
    brukers til noe fornuftig. På denne måten blir ikke noe ødelagt.

Oppgave 3
    char tekst[5];
    char *pekeren = tekst;
    char letEtter = 'e';
    cin >> tekst;      
    while (*pekeren != letEtter) {  
        *pekeren = letEtter;  
        pekeren++; 
    }

    //Man setter *pekeren til å peke på ett nytt element, det vil si når pekeren++ så kan den peke på noe helt annet.
    og man vil få en evig løkke... for å ungå dette kan man ha en teller --> int i = 0; på 1 linje inn i while-løkka 
    kan man skrive *(pekeren + i) = letEtter; og i slutten av while-løkka skrive i++; på denne måten vil lista bli fylt opp
    og man vil ende på en 'e' ganske fort.
Oppgave 4

    Original med feilbeskrivelse, se main.cpp på endret kode.
    Litt vanskelig å vite hvordan dere har tenkt at det egentlig
    skal være, så jeg lagde bare en kjørbark kode.

    int a = 5;
    int &b; //sier at int skal være en adresse? 
    int *c; // ikke feil, men burde initieres til 0 eller nullptr
    c = &b; // kommer ann på om b har blitt initialisert 
    *a = *b + *c;
    &b = 2; // kan vell ikke endre en adrese slik?


    